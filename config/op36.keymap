#include "keys_ru.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&mt {
    quick-tap-ms = <200>;
    flavor = "tap-preferred";
    require-prior-idle-ms = <125>;
};

/ {
    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 34 35>;
            hold-trigger-on-release;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32>;
            hold-trigger-on-release;
        };

        hrm: home_row_mod {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <200>;
            tapping-term-ms = <170>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;

            hold-trigger-on-release;
        };
    };

    combos {
        compatible = "zmk,combos";

        kha {
            bindings = <&kp LBKT>;
            key-positions = <6 7>;
        };

        hrdsgn {
            bindings = <&kp RBKT>;
            key-positions = <7 8>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
  &kp Q         &kp W        &kp E          &kp R            &kp T                              &kp Y  &kp U        &kp I         &kp O        &kp P
  &hrm LCTRL A  &hrm LALT S  &hrm LSHIFT D  &hrm LGUI F      &kp G                              &kp H  &hrm LGUI J  &hrm LSHFT K  &hrm LALT L  &hrm LCTRL SEMI
  &kp Z         &kp X        &kp C          &kp V            &kp B                              &kp N  &kp M        &kp COMMA     &kp DOT      &kp SLASH
                                            &lt 4 BACKSPACE  &lt 1 TAB  &kp SPACE    &kp ENTER  &mo 2  &kp TAB
            >;

            display-name = "Base";
        };

        nav {
            bindings = <
  &kp N1     &kp N2    &kp N3     &kp N4     &kp N5                           &kp N6          &kp N7         &kp N8     &kp N9           &kp N0
  &sk LCTRL  &sk LALT  &sk LSHFT  &sk LGUI   &kp ESC                          &kp LEFT_ARROW  &kp DOWN       &kp UP     &kp RIGHT_ARROW  &trans
  &none      &none     &kp LG(C)  &kp LG(V)  &kp LG(SPACE)                    &kp BACKSPACE   &kp PAGE_DOWN  &kp PG_UP  &trans           &trans
                                  &trans     &trans         &trans    &trans  &mo 3           &trans
            >;

            display-name = "Navigation";
        };

        sym {
            bindings = <
  &kp EXCL   &kp AT_SIGN  &kp HASH   &kp DOLLAR        &kp BACKSLASH                        &kp CARET      &kp AMPERSAND  &kp ASTRK      &kp LPAR          &kp RPAR
  &kp GRAVE  &kp PRCNT    &kp MINUS  &kp EQUAL         &kp LEFT_BRACKET                     &kp COLON      &sk LGUI       &sk LSHFT      &sk LALT          &sk RCTRL
  &kp TILDE  &none        &none      &kp SINGLE_QUOTE  &kp RIGHT_BRACKET                    &kp BACKSPACE  &none          &kp LESS_THAN  &kp GREATER_THAN  &kp QMARK
                                     &trans            &mo 3              &trans    &trans  &trans         &trans
            >;

            display-name = "Symbols";
        };

        adj {
            bindings = <
  &bootloader  &kp F1  &kp F2   &kp F3   &kp F4                     &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR
  &kp LGUI     &kp F5  &kp F6   &kp F7   &kp F8                     &out OUT_BLE  &kp C_VOL_DN  &kp K_MUTE    &kp C_VOL_UP  &kp RGUI
  &none        &kp F9  &kp F10  &kp F11  &kp F12                    &out OUT_USB  &kp C_PREV    &kp C_PP      &kp C_NEXT    &studio_unlock
                                &trans   &trans   &trans    &trans  &trans        &trans
            >;

            display-name = "Adjust";
        };

        app {
            bindings = <
  &none                  &none                  &none                  &none                  &none                                  &none                  &none                  &none                  &none                  &none
  &kp LS(LA(LC(LG(A))))  &kp LS(LA(LC(LG(S))))  &kp LS(LA(LC(LG(D))))  &kp LS(LC(LA(LG(F))))  &kp LS(LA(LC(LG(G))))                  &kp LS(LA(LC(LG(H))))  &kp LS(LA(LC(LG(J))))  &kp LS(LA(LC(LG(K))))  &kp LS(LA(LC(LG(L))))  &kp LS(LA(LC(LG(SEMI))))
  &none                  &none                  &none                  &none                  &none                                  &none                  &none                  &none                  &none                  &none
                                                                       &none                  &none                  &none    &none  &none                  &none
            >;
        };
    };
};
