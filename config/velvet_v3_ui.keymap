#include "keys_ru.h"
#include <dt-bindings/zmk/input_transform.h>
#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        cap_sen: cap_sen {
            compatible = "zmk,behavior-hold-tap";
            label = "CAP_SEN";
            bindings = <&mo>, <&mkp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            hold-while-undecided;
        };

        ms_t: ms_t {
            compatible = "zmk,behavior-hold-tap";
            label = "ms_t";
            bindings = <&mo>, <&mkp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    combos {
        compatible = "zmk,combos";

        lmb {
            bindings = <&mkp MB1>;
            key-positions = <39 38>;
            layers = <0>;
        };
    };

    macros {
        exit: exit {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp K &kp I &kp L &kp L &kp SPACE &kp MINUS &kp N9 &kp SPACE &kp DLLR &kp DLLR>;
            label = "EXIT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&kp TAB    &kp Q  &kp W      &kp E     &kp R     &kp T                                  &kp Y        &kp U  &kp I      &kp O     &kp P      &kp BSPC
&kp LCTRL  &kp A  &kp S      &kp D     &kp F     &kp G                                  &kp H        &kp J  &kp K      &kp L     &kp SEMI   &kp SQT
&kp LSHFT  &kp Z  &kp X      &kp C     &kp V     &kp B                                  &kp N        &kp M  &kp COMMA  &kp DOT   &kp SLASH  &kp RSHFT
                  &kp GRAVE  &kp LALT  &kp LGUI  &ms_t 1 MB1  &lt 5 SPACE    &kp ENTER  &ms_t 2 MB1  &none  &kp LBKT   &kp RBKT
            >;

            display-name = "Base";
        };

        Navigation {
            bindings = <
&trans   &kp NUMBER_5  &kp NUMBER_4  &kp N3     &kp NUMBER_2  &kp NUMBER_1                       &kp N6     &kp N7          &kp N8                &kp N9                &kp N0  &trans
&kp ESC  &none         &none         &kp EQUAL  &kp MINUS     &kp LG(SPACE)                      &kp LEFT   &kp DOWN_ARROW  &kp UP                &kp RIGHT             &trans  &trans
&trans   &none         &none         &kp LG(C)  &kp LG(V)     &kp BSLH                           &kp PG_UP  &kp PG_DN       &trans                &trans                &trans  &trans
                       &trans        &trans     &trans        &trans         &trans    &kp BSPC  &mo 3      &trans          &kp LG(LS(NUMBER_3))  &kp LG(LS(NUMBER_4))
            >;

            display-name = "Navigation";
        };

        Symbols {
            bindings = <
&trans  &kp PRCNT  &kp DOLLAR  &kp HASH  &kp AT_SIGN  &kp BSLH                      &kp CARET         &kp AMPS           &kp ASTRK      &kp LPAR          &kp RPAR   &trans
&trans  &none      &none       &kp PLUS  &kp UNDER    &kp EXCL                      &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &none          &none             &kp COLON  &kp DQT
&trans  &none      &none       &none     &none        &kp PIPE                      &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp LESS_THAN  &kp GREATER_THAN  &kp QMARK  &trans
                   &kp TILDE   &trans    &trans       &mo 3     &kp BSPC    &trans  &trans            &trans             &trans         &trans
            >;

            display-name = "Symbols";
        };

        Adjust {
            bindings = <
&bootloader  &none  &kp F1  &kp F2   &kp F3   &kp F4                   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2      &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
&none        &none  &kp F5  &kp F6   &kp F7   &kp F8                   &out OUT_BLE  &kp C_VOL_DN  &kp K_MUTE        &kp C_VOL_UP  &none         &studio_unlock
&none        &none  &kp F9  &kp F10  &kp F11  &kp F12                  &out OUT_USB  &kp K_PREV    &kp K_PLAY_PAUSE  &kp K_NEXT    &none         &none
                    &none   &none    &none    &none    &none    &none  &none         &none         &exit             &none
            >;

            display-name = "Adjust";
        };

        Mouse {
            bindings = <
&trans  &trans  &trans    &trans    &trans    &trans                    &trans  &trans    &trans    &trans    &trans  &trans
&trans  &mo 5   &mkp MB3  &mkp MB2  &mkp MB1  &mo 6                     &mo 6   &mkp MB1  &mkp MB2  &mkp MB3  &mo 5   &trans
&trans  &trans  &trans    &trans    &trans    &trans                    &trans  &trans    &trans    &trans    &trans  &trans
                &trans    &trans    &trans    &trans  &trans    &trans  &trans  &trans    &trans    &trans
            >;
        };

        Scroll {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;
        };

        Sniper {
            bindings = <
&trans  &trans  &trans    &trans    &trans    &trans                    &trans  &trans    &trans    &trans    &trans  &trans
&trans  &trans  &mkp MB3  &mkp MB2  &mkp MB1  &trans                    &trans  &mkp MB1  &mkp MB2  &mkp MB3  &trans  &trans
&trans  &trans  &trans    &trans    &trans    &trans                    &trans  &trans    &trans    &trans    &trans  &trans
                &trans    &trans    &trans    &trans  &trans    &trans  &trans  &trans    &trans    &trans
            >;
        };

        User0 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;

            display-name = "User0";
        };

        User1 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;

            display-name = "User1";
        };

        User2 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;

            display-name = "User2";
        };

        User3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;

            display-name = "User3";
        };
    };
};

&trackball { cpi = <1000>; };

&trackball_listener {
    input-processors = <&zip_xy_scaler 9 20>;

    scroller {
        layers = <5>;
        input-processors =
            <&zip_xy_transform INPUT_TRANSFORM_Y_INVERT>,
            <&zip_xy_scaler 1 32>,
            <&zip_xy_to_scroll_mapper>;
    };

    sniper {
        layers = <6>;
        input-processors = <&zip_xy_scaler 1 4>;
    };
};
